{
  "openapi": "3.0.0",
  "info": {
    "title": "PictoTale API",
    "version": "1.0.0",
    "description": "API documentation for PictoTale backend, including authentication, user, and story endpoints."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "tags": [
    { "name": "Auth", "description": "Authentication endpoints" },
    { "name": "User", "description": "User profile and gamification" },
    { "name": "Stories", "description": "Story creation and management" }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" },
                  "displayName": { "type": "string" }
                },
                "required": ["email", "password", "displayName"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout the current user",
        "responses": {
          "200": { "description": "Logout successful" }
        }
      }
    },
    "/api/user/profile": {
      "get": {
        "tags": ["User"],
        "summary": "Get user profile",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/user/achievements": {
      "get": {
        "tags": ["User"],
        "summary": "Get user achievements",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of achievements",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories": {
      "post": {
        "tags": ["Stories"],
        "summary": "Create a new story",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "content": { "type": "string" },
                  "type": { "type": "string" },
                  "drawingUrl": { "type": "string", "format": "uri" }
                },
                "required": ["title", "content", "type"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Story created" },
          "400": { "description": "Invalid input" }
        }
      },
      "get": {
        "tags": ["Stories"],
        "summary": "Get all stories",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of stories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Story" }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stories/{id}": {
      "get": {
        "tags": ["Stories"],
        "summary": "Get a story by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Story details",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Story" }
              }
            }
          },
          "404": { "description": "Story not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "displayName": { "type": "string" },
          "avatarUrl": { "type": "string", "format": "uri" },
          "xp": { "type": "integer" },
          "achievements": {
            "type": "array",
            "items": { "type": "string" }
          },
          "completedChallenges": {
            "type": "array",
            "items": { "type": "string" }
          },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Story": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "type": { "type": "string" },
          "drawingUrl": { "type": "string", "format": "uri" },
          "authorId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
}